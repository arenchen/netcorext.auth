{
  "Id": "Netcorext.Auth.Authentication",
  "ConfigVersion": "1.0.0",
  "Connections": {
    "RelationalDb": {
      "Default": {
        "Connection": "Host=external-postgresql;Port=5432;Username=postgres;Password=P@ssw0rd;Database=netcorext_auth;requestId=true",
        "PoolSize": 1024
      },
      "Slave": {
        "Connection": "Host=external-postgresql;Port=5432;Username=postgres;Password=P@ssw0rd;Database=netcorext_auth;slave=true;requestId=true",
        "PoolSize": 1024
      }
    },
    "Redis": {
      "Default": {
        "Connection": "external-redis:6379",
        "Instance": ""
      }
    }
  },
  "Services": {
    "Netcorext.Auth.Authentication": {
      "Url": "http://netcorext-auth-authentication"
    },
    "Netcorext.Auth.Gateway": {
      "Url": "http://netcorext-auth-gateway"
    }
  },
  "Caches": {
    "Maintain": {
      "Key": "auth:cache:maintain"
    },
    "UserRole": {
      "Key": "auth:cache:user-role"
    }
  },
  "Queues": {
    "BlockedIpChangeEvent": "auth:channel:blocked-ip-change",
    "ClientChangeEvent": "auth:channel:client-change",
    "ClientRoleChangeEvent": "auth:channel:client-role-change",
    "HealthCheckEvent": "auth:channel:health-check",
    "MaintainChangeEvent": "auth:channel:maintain-change",
    "PermissionChangeEvent": "auth:channel:permission-change",
    "RoleChangeEvent": "auth:channel:role-change",
    "RouteChangeEvent": "auth:channel:route-change",
    "TokenRevokeEvent": "auth:channel:token-revoke",
    "UserChangeEvent": "auth:channel:user-change",
    "UserRoleChangeEvent": "auth:channel:user-role-change"
  },
  "AuthOptions": {
    "SigningKey": "D9E8702AFF138206EB307EDAA73C1DE8392F8DE7DABA173E138798FDCC26D5D2",
    "Issuer": "Netcorext",
    "Audience": "Netcorext",
    "ValidateIssuer": true,
    "ValidateAudience": false,
    "ValidateLifetime": true,
    "ValidateIssuerSigningKey": true,
    "IncludeErrorDetails": true,
    "NameClaimType": "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier",
    "RoleClaimType": "http://schemas.microsoft.com/ws/2008/06/identity/claims/role",
    "ClockSkewSeconds": 300,
    "TokenExpireSeconds": 3600,
    "RefreshTokenExpireSeconds": 86400,
    "CodeExpireSeconds": 600,
    "LockoutAccessFailedCount": 3,
    "OtpAuthScheme": "otpauth://totp/{0}:{1}?secret={2}&issuer={0}&algorithm=SHA1&digits=6&period=30"
  },
  "Route": {
    "RoutePrefix": "/api/auth-authentication",
    "VersionRoute": "/v{version:apiVersion}",
    "HealthRoute": "/Healthz"
  },
  "AppSettings": {
    "RegisterConfig": {
      "HttpBaseUrl": "http://netcorext-auth-authentication",
      "Http2BaseUrl": "http://netcorext-auth-authentication",
      "ForwarderRequestVersion": "2.0",
      "ForwarderHttpVersionPolicy": "RequestVersionOrHigher",
      "ForwarderActivityTimeout": null,
      "ForwarderAllowResponseBuffering": null
    },
    "CheckCacheKeys": {
      "ClientCache": 1,
      "PermissionRuleCache": 1,
      "RolePermissionCache": 1,
      "RouteCache": 1,
    },
    "InternalHost": [],
    "Owner": [],
    "UseNativeStatus": false,
    "HealthCheckInterval": 10000,
    "HealthCheckTimeout": 15000,
    "CacheTokenExpires": 1800000,
    "StreamMaxLength": 65535,
    "SlowCommandLoggingThreshold": 100,
    "RequestIdHeaderName": "X-Request-Id",
    "RequestIdFromHeaderNames": [ "X-Request-Id" ]
  },
  "Kestrel": {
    "EndpointDefaults": {
      "Protocols": "Http2"
    }
  },
  "AllowedHosts": "*",
  "Serilog": {
    "MinimumLevel": {
      "Default": "Information",
      "Override": {
        "Auth-Traffic": "Information"
      }
    },
    "WriteTo": [
      {
        "Name": "Async",
        "Args": {
          "configure": [
            {
              "Name": "Console",
              "Args": {
                "formatter": {
                  "type": "Netcorext.Logging.Serilog.JsonPropertyFilterFormatter, Netcorext.Logging.Serilog",
                  "renderMessage": true
                }
              }
            }
          ]
        }
      }
    ],
    "Enrich": [ "FromLogContext", "WithMachineName", "WithThreadId" ]
  }
}
